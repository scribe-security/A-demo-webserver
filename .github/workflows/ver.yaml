name: BB-Signature verify

env:
  PRODUCT_VERSION: "v0.0.29"
  PRODUCT_NAME: "NPM-Bad-Example-Code"
  IMAGE_NAME: "no-good-vulnerable"
  FS_NAME: fs-tracker-${{ github.run_id }}
  FS_DIR: /tmp/fs-tracker-${{ github.run_id }}

on:
  workflow_dispatch:
  

jobs:
  
  build-docker-image:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        id-token: write
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
    
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
  
        - name: Log in to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
  
        - name: Build and push Docker image
          uses: docker/build-push-action@v4
          with:
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}
  
        - name: Generate signed SBOM for docker image
          uses: scribe-security/action-bom@master
          with:
             target: '${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}'
             product-key:  ${{ env.PRODUCT_NAME }}
             product-version: ${{env.PRODUCT_VERSION}} #${{env.GITHUB_RUN_NUM}}
             scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
             format: attest
             key: env://ATTEST_KEY
             cert: env://ATTEST_CERT
             ca: env://ATTEST_CA
             verbose: 2
        - name: Generate signed SLSA Provenance for docker image
          uses: scribe-security/action-slsa@master
          with:
             target: '${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}'
             product-key:  ${{ env.PRODUCT_NAME }}
             product-version: ${{env.PRODUCT_VERSION}} #${{env.GITHUB_RUN_NUM}}
             scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
             format: attest
             key: env://ATTEST_KEY
             cert: env://ATTEST_CERT
             ca: env://ATTEST_CA
             verbose: 2
      
  policy-gate:
      name: pr-policy-gate
      needs: [build-docker-image] 
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
        id-token: write
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Log in to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Policy verify image signature
          uses: scribe-security/action-verify@master
          with:
             target: '${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}'
             product-key:  ${{ env.PRODUCT_NAME }}
             product-version: ${{env.PRODUCT_VERSION}} 
             scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
             format: attest
             label: "Glass-2"
             cert: env://ATTEST_CERT
             ca: env://ATTEST_CA

        - name: Policy verify image provenance 
          uses: scribe-security/action-verify@master
          with:
             target: '${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}'
             product-key:  ${{ env.PRODUCT_NAME }}
             product-version: ${{env.PRODUCT_VERSION}} 
             scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
             format: attest
             label: "Glass-2"
             cert: env://ATTEST_CERT
             ca: env://ATTEST_CA
             rule: slsa/l2-provenance-authenticated@v1
             
             
        
       

      
