name: AA-SLSA-at-scale
on:
  workflow_dispatch:

env:
    SCRIBE_PRODUCT_NAME: "Hello_World_Github"
    SCRIBE_PRODUCT_VERSION: "0.0.1"
    INPUT_FILE: "repos.csv"
    PLATFORMS_DB_PATH: k8s.platforms.db
    LOG_LEVEL: "TRACE"
    SCRIBE_TOKEN: ${{ secrets.SCRIBE_TOKEN }}

jobs:
  update-repo-scope:
      runs-on: ubuntu-latest
      permissions:
          contents: read
          id-token: write
      steps:        
        - name: Checkout repository
          uses: actions/checkout@v3
        - name: fetch repos
          run: |
            if [[ ! -f "$INPUT_FILE" ]]; then
                echo "Error: File '$INPUT_FILE' not found."
            exit 1
            fi
            repo_scope="--repository.mapping "
            # Read each repo from CSV (assuming one repo per line or comma-separated)
            while IFS=, read -r repo _; do
                repo=$(echo "$repo" | xargs)  # trim whitespace
                [[ -z "$repo" ]] && continue  # skip empty lines
                # Append to repo_scope string
                repo_scope+="${repo}::${repo}::$SCRIBE_PRODUCT_VERSION "
            done < "$INPUT_FILE"
            
            # Remove trailing space
            repo_scope=$(echo "$repo_scope" | sed 's/ $//')
            
            echo "$repo_scope"
            echo "REPO_SCOPE=$repo_scope" >> $GITHUB_ENV
        - name: Log in to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Discovery Github
          uses: scribe-security/action-platforms@master
          with:
            command: discover
            platform: github
            valint_args: --valint.log-level info
            args: 
              ${{ env.REPO_SCOPE}}
              --token ${{ secrets.GH_TOKEN }}
              --scope.organization=scribe-security
              --commit.skip --scope.branch=main
              --scope.commit.past_days 3
              --scope.workflow.past_days 3
              --scope.workflow.analyzed_logs
              --skip-cache
              --scope.workflow.name *build*
              --slsa-enable
              
