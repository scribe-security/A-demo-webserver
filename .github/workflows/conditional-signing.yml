name: conditional-signing
env:
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  PRODUCT_VERSION: 0.1.29
  IMAGE_NAME: star-generator
  APP_NAME: Star-Generator
  VALINT_BOM_AUTHOR_NAME: Guy-Chernobrov
  VALINT_BOM_AUTHOR_EMAIL: gc@scribesecurity.com
  VALINT_BOM_AUTHOR_PHONE: 052-9281309
  VALINT_BOM_SUPPLIER_NAME: Scribe-Security
  VALINT_BOM_SUPPLIER_URL: www.scribesecurity.com
  VALINT_BOM_SUPPLIER_EMAIL: info@scribesecurity.com
  VALINT_BOM_SUPPLIER_PHONE: 001-001-0011
  INTEGRATION_TEST: 15s
  GITHUB_RUN_NUM: ${{ github.run_number }}
  
  
on:
  workflow_dispatch:
#  pull_request:
#  push:
#    branches: [main]

concurrency: 
  group: build-in-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}

 
  
  image-evidence:
    needs: 
    - build-docker-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
           fetch-depth: 0
      - name: Generate SBOM evidence for docker image
        uses: scribe-security/action-bom@master
        with:
           target: '${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}'
           scribe-enable: true
           product-key:  ${{ env.APP_NAME }}
           product-version: ${{env.PRODUCT_VERSION}} #${{env.GITHUB_RUN_NUM}}
           # scribe-client-id: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_ID }}
           scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
           config: .valint.yaml
           label: "Flamingo"
  tests:
    needs: 
    - build-docker-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: integration-test
        run: sleep 30
        shell: bash          
  enforce:
    needs: 
    - tests
    - image-evidence
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
           fetch-depth: 0
      - name: Verify critial vulns
        uses: scribe-security/action-verify@master
        with:
          scribe-enable: true
          product-key:  ${{ env.APP_NAME }}
          product-version: ${{env.PRODUCT_VERSION}} #${{env.GITHUB_RUN_NUM}}
          scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
          config: .valint.yaml
          rule: critical-vulns-rule.yaml
          skip-bundle: false
          verbose: 2

  sign:
    needs: enforce
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
           fetch-depth: 0

      - name: Generate signed SBOM for docker image
        uses: scribe-security/action-bom@master
        with:
          target: '${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}'
          scribe-enable: true
          product-key:  ${{ env.APP_NAME }}
          product-version: ${{env.PRODUCT_VERSION}} #${{env.GITHUB_RUN_NUM}}
          # scribe-client-id: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_ID }}
          scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
          format: attest
          config: .valint.yaml
          label: "Flamingo"
      - uses: actions/upload-artifact@v2
        with:
          name: provenance
          path: ${{ steps.slsa_provenance.outputs.OUTPUT_PATH }} 
           
           


 
