name: simple-build-slsa3-and-verify-gh
env:
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  PRODUCT_VERSION: "v0.0.1-discovery-demo"
  IMAGE_NAME: star-generator
  APP_NAME: Star-Generator
  VALINT_BOM_AUTHOR_NAME: Guy-Chernobrov
  VALINT_BOM_AUTHOR_EMAIL: gc@scribesecurity.com
  VALINT_BOM_AUTHOR_PHONE: 052-9281309
  VALINT_BOM_SUPPLIER_NAME: Scribe-Security
  VALINT_BOM_SUPPLIER_URL: www.scribesecurity.com
  VALINT_BOM_SUPPLIER_EMAIL: info@scribesecurity.com
  VALINT_BOM_SUPPLIER_PHONE: 001-001-0011
  INTEGRATION_TEST: 15s
  GITHUB_RUN_NUM: ${{ github.run_number }}
  
  
on:
  workflow_dispatch:
#  pull_request:
#  push:
#    branches: [main]

concurrency: 
  group: build-in-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}

  checkout-attest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 17

      - name: Install dependencies
        run: npm install --save-exact
   
           
      - name: Generate signed SBOM for repo content clone
        uses: scribe-security/action-bom@master
        env:
          ATTEST_KEY: ${{ secrets.ATTEST_KEY }}
          ATTEST_CERT: ${{ secrets.ATTEST_CERT }}
          ATTEST_CA: ${{ secrets.ATTEST_CA }}
        with:
            target: 'git:.'
            scribe-enable: true
            attest-default: x509-env
            product-key: ${{ env.APP_NAME }}
            product-version: ${{env.PRODUCT_VERSION}}
            scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
            components: commits,packages,files,dep
            format: attest
            config: .valint.yaml
            verbose: 2
            deliverable: true
           
      

      - uses: actions/upload-artifact@v3
        with:
          name: evidence
          path: scribe/valint/*.json*
  
  attest-image:
    needs: 
    - build-docker-image
    - checkout-attest
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
           fetch-depth: 0
      - name: Generate signed SBOM for docker image
        uses: scribe-security/action-bom@master
        env:
          ATTEST_KEY: ${{ secrets.ATTEST_KEY }}
          ATTEST_CERT: ${{ secrets.ATTEST_CERT }}
          ATTEST_CA: ${{ secrets.ATTEST_CA }}
        with:
           target: '${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}'
           scribe-enable: true
           attest-default: x509-env
           product-key:  ${{ env.APP_NAME }}
           product-version: ${{env.PRODUCT_VERSION}}
           scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
           format: attest
           config: .valint.yaml
           label: "Flamingo"
  tests:
    needs: 
    - build-docker-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: integration-test
        run: sleep 30
        shell: bash          
  
  provenance-deploy:
    needs:
      - tests
      - attest-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
           fetch-depth: 0
      - name: create slsa provenance
        id: slsa_provenance
        uses: scribe-security/action-slsa@master
        env:
          ATTEST_KEY: ${{ secrets.ATTEST_KEY }}
          ATTEST_CERT: ${{ secrets.ATTEST_CERT }}
          ATTEST_CA: ${{ secrets.ATTEST_CA }}
        with:
           target: '${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:1.1.${{env.GITHUB_RUN_NUM}}'
           scribe-enable: true
           attest-default: x509-env
           product-key:  ${{ env.APP_NAME }}
           product-version: ${{env.PRODUCT_VERSION}}
           scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
           format: attest
           config: .valint.yaml


      - name: Verify SLSA 3
        uses: scribe-security/action-verify@master
        env:
          ATTEST_KEY: ${{ secrets.ATTEST_KEY }}
          ATTEST_CERT: ${{ secrets.ATTEST_CERT }}
          ATTEST_CA: ${{ secrets.ATTEST_CA }}
        with:
          scribe-enable: true
          product-key:  ${{ env.APP_NAME }}
          product-version: ${{env.PRODUCT_VERSION}}
          attest-default: x509-env
          scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
          format: attest
          config: .valint.yaml
          policy: slsa3-policy.yaml
          rule: signed-commits-api.yaml,verify-signed-source-sbom.yaml
          rule-args: RepoAsset=asset=scribe-security__A-demo-webserver_,Repo=${{ github.event.repository.name }},Owner=${{ github.event.repository.owner.login }},HEAD=${{ github.sha }}
          git-branch: slsa3_demo
          skip-bundle: false



      - uses: actions/upload-artifact@v2
        with:
          name: provenance
          path: ${{ steps.slsa_provenance.outputs.OUTPUT_PATH }} 
           
           


 



