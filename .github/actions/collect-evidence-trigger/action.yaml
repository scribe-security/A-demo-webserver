name: "Post Step Action"
description: "Appends the TARGET to .github/context and triggers a repository dispatch"

inputs:
  target:
    description: "Docker image target"
    required: false
  docker_username:
    description: "Docker username (usually stored as a secret)"
    required: false
  image_name:
    description: "Name of the Docker image"
    required: false
  run_number:
    description: "GitHub Actions run number"
    required: false
  token:
    description: "PAT used to trigger repository dispatch (e.g., a secret)"
    required: true
  repository:
    description: "Target repository in the format 'owner/repo'"
    required: true
  event_type:
    description: "Repository Dispatch event type (e.g., 'my-event')"
    default: "my-event"
    required: true
  # The following inputs are optional. You can define them as needed
  # or simply rely on environment variables within your workflow.

runs:
  using: "composite"
  steps:
    - name: Run local context script
      shell: bash
      run: |
        # source or execute the script from the action's root directory
        source "${GITHUB_ACTION_PATH}/context"
        echo "Script was sourced successfully."
        printenv
        # echo "TARGET=${{ inputs.docker_username }}/${{ inputs.image_name }}:1.1.${{ inputs.run_number }}" >> .github/context

    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ inputs.token }}
        repository: ${{ inputs.repository }}
        event-type: ${{ inputs.event_type }}
        client-payload: |-
          {
            "git_commit": "${{env.DOCKER_CONTEXT_GIT_COMMIT }}",
            "git_url": "${{ env.DOCKER_CONTEXT_GIT_URL }}",
            "git_ref": "${{ env.DOCKER_CONTEXT_GIT_REF }}",
            "event": "${{ env.DOCKER_CONTEXT_EVENT }}",
            "workflow": "${{ env.DOCKER_CONTEXT_WORKFLOW }}",
            "run_id": "${{ env.DOCKER_CONTEXT_RUN_ID }}",
            "organization": "${{ env.DOCKER_CONTEXT_ORGANIZATION }}",
            "platform": "${{ env.DOCKER_CONTEXT_PLATFORM }}",
            "target": "${{ inputs.target || env.TARGET }}"
          }
      env:
        DOCKER_CONTEXT_GIT_COMMIT: ${{ env.DOCKER_CONTEXT_GIT_COMMIT }}
        DOCKER_CONTEXT_GIT_URL: ${{ env.DOCKER_CONTEXT_GIT_URL }}
        DOCKER_CONTEXT_GIT_REF: ${{ env.DOCKER_CONTEXT_GIT_REF }}
        DOCKER_CONTEXT_EVENT: ${{ env.DOCKER_CONTEXT_EVENT }}
        DOCKER_CONTEXT_WORKFLOW: ${{ env.DOCKER_CONTEXT_WORKFLOW }}
        DOCKER_CONTEXT_RUN_ID: ${{ env.DOCKER_CONTEXT_RUN_ID }}
        DOCKER_CONTEXT_ORGANIZATION: ${{ env.DOCKER_CONTEXT_ORGANIZATION }}
        DOCKER_CONTEXT_PLATFORM: ${{ env.DOCKER_CONTEXT_PLATFORM }}
