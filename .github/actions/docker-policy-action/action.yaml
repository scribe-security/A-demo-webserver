name: Scribe Docker Policy Action
description: Verify compliance policies against evidence to ensure the integrity of supply chain.
author: Mikey Strauss
inputs:
  target:
    description: Target object name format=[<image:tag>, <dir path>, <git url>]
    required: true
  select:
    description: Select the policy to enforce [scout]
    required: true
  input:
    description: Input evidence to verify against policy
    required: false
  format:
    description: Output Evidence format [statement attest]
    required: false
  push-github-results:
    description: Push Results to github Security alerts
    required: false
  verify-only:
    description: Verify remote evidence against policy
    required: false
  args:
    description: Additional arguments to pass to the policy plugin
    required: false
  output-directory:
    description: Output directory for the policy plugin
    required: false
  product-key:
    description: Evidence Product key
    required: false
  product-version:
    description: Evidence Product version
    required: false
  output-report:
    description: Output SARIF report for the policy plugin
    required: false
    default: valint.intoto.sarif.json
  push-artifacts-evidence:
    description: Enable artifacts
    required: false

runs:
  using: "composite"
  steps:
    - shell: bash
      name: Install Policy Plugin
      run: |
        if ! command -v docker > /dev/null; then
          echo "Docker is not installed or not available in PATH."
          exit 1
        fi

        POLICY_HELP=$(docker policy -h | grep "valint" || true)
        echo "$POLICY_HELP"

        if [ -z "$POLICY_HELP" ]; then
          echo "Docker policy plugin not found, installing..."
          curl -sSfL https://raw.githubusercontent.com/scribe-security/misc/SH-6730-docker-plugin/docker-cli-plugin/install.sh | sh -s -- -b SH-6730-docker-plugin
        else
          echo "Docker policy plugin already installed."
        fi

    - shell: bash
      name: Run Scribe Docker Policy
      id: run_docker_policy
      if: ${{ inputs.target }}
      run: |
        echo "Running docker policy with target: ${{ inputs.target }}"
        docker policy ${{ inputs.target }} \
          --select ${{ inputs.select }} \
          ${{ inputs.format && '--format=' }}${{ inputs.format }} \
          ${{ inputs.product-key && '--product-key=' }}${{ inputs.product-key}} \
          ${{ inputs.product-version && '--product-version=' }}${{ inputs.product-version}} \
          ${{ inputs.output-directory && '--output-directory=' }}${{ inputs.output-directory}} \
          ${{ inputs.output-report && '--output-file=' }}${{ inputs.output-report}} \
          ${{ inputs.input && '--input=' }}${{ inputs.input}} \
          ${{ inputs.args }}

    # --bundle-branch SH-6730-docker-plugin \

    # 2DO - Hack should be under verify --payload flag.
    - shell: bash
      name: Extract SARIF file
      id: extract_sarif
      run: |
        echo "STEP OUTPUT" ${{ steps.run_docker_policy.outputs.OUTPUT_PATH }}
        cat ${{ steps.run_docker_policy.outputs.OUTPUT_PATH }}
        cat ${{ steps.run_docker_policy.outputs.OUTPUT_PATH }} | jq -r '.payload' | base64 -d | jq -r '.payload' | base64 --decode | jq '.predicate' | jq '.content' > ${{ env.DEFAULT_EXTRACT_NAME }}
        ls -lh
      env:
        DEFAULT_EXTRACT_NAME: valint.sarif.json

    - name: Upload evidence
      if: ${{ inputs.push-artifacts-evidence == 'true' }}
      uses: actions/upload-artifact@v3
      with:
        name: evidence
        path: |
          ${{ inputs.output-directory }}
          ${{ env.DEFAULT_EXTRACT_NAME }}
        retention-days: 1
      env:
        DEFAULT_EXTRACT_NAME: valint.sarif.json

    - name: Upload SARIF file to GitHub Security Alerts
      if: ${{ inputs.push-github-results == 'true' }}
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ env.DEFAULT_EXTRACT_NAME }}
        category: scout
      env:
        DEFAULT_EXTRACT_NAME: valint.sarif.json

    
